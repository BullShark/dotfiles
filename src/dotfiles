#!/usr/bin/env bash
#
# This script avoids making the entire home folder into a git repo
# To upload a few scripts and configs to a public git repository
#
# Avoid zsh from having a git prompt while anywhere in the user's home directory
#
# Steps:
#   1. Make a list of path/files to be tracked and store in a bash array or w/e is most efficient
#   2. Make a temporary directory, mkdir -p path/directory
#   3. Cd to that directory and git clone repo with scripts and configs
#   4. Copy the list/array of path/files from step 1 into the directory created in step 2
#        And overwrite any existing files because they are tracked remotely anyways
#   5. Git commit -a, commit all files with changes
#   6. Git push those changes
#   7. Now that all the files and their changes are tracked, delete the temporary directdory from step 1
#         With all the files in it because it will be recreated when needed
#
set -e
set -x

# Files to be tracked
files=(
  ~/bin/dotfiles
  ~/bin/podw
  ~/bin/pod
  ~/bin/konsolewrapper
  ~/bin/matrix.sh
  ~/bin/gibson
  ~/bin/vpaste
  ~/bin/retroarchw
  ~/bin/pkgfile-update
  ~/.bashrc
  ~/.bash_profile
  ~/.zshrc
  ~/.zprofile
  ~/.profile
  ~/.screenrc
  ~/.vimrc
  ~/.gvimrc
  ~/.LESS_TERMCAP
  ~/.vim/colors/molokai.vim
  ~/.vim/colors/aldmeris.vim
  ~/.vim/colors/darkspectrum.vim
  ~/.local/share/konsole/Sweet.colorscheme
  ~/.local/share/konsole/Sweet-Mars.colorscheme
  ~/.local/share/konsole/Sweet.profile
  ~/.local/share/konsole/Sweet-Mars.profile
  ~/.config/audacious/eq.preseteq.preset
  ~/Templates/Chococooky.ttf
  /etc/rc.local
  /etc/default/grub
  /etc/xdg/plasma-workspace/env/envars.sh
)

# Set the vars here
github_user="BullShark"
github_project="dotfiles"
dir="/var/tmp"
repo="https://github.com/$github_user/$github_project.git"

# Make globbing * and .* behave
GLOBIGNORE=".:.."
shopt -u dotglob

# Retrieve the project folder and change to it
cd "$dir"
#XXX if $dir/$github is under /tmp or /var/tmp and it already exists, delete it
git clone "$repo"
dir="$dir/$github_project"
cd "$dir"
mkdir -p "$dir/src"

# Copy the files over to the temp directory for use with git
for each in "${files[@]}"
do
  rsync -av "$each" "$dir/src"
done

# Add, commit, and push
git add * .*
git commit -a -m "Updated" # Made to run as non-interactive by cron
git push

# Do not delete if we have the wrong directory
if [[ $dir =~ ^(/tmp/|/var/tmp/).+ ]]; then
  rm -rf "$dir"
fi

