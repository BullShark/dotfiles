#!/usr/bin/env bash
#
# This script avoids making the entire home folder into a git repo
# To upload a few scripts and configs to a public git repository
#
# Avoid zsh from having a git prompt while anywhere in the user's home directory
#
# Steps:
#   1. Make a list of path/files to be tracked and store in a bash array or w/e is most efficient
#   2. Make a temporary directory, mkdir -p path/directory
#   3. Cd to that directory and git clone repo with scripts and configs
#   4. Copy the list/array of path/files from step 1 into the directory created in step 2
#        And overwrite any existing files because they are tracked remotely anyways
#   5. Git commit -a, commit all files with changes
#   6. Git push those changes
#   7. Now that all the files and their changes are tracked, delete the temporary directdory from step 1
#         With all the files in it because it will be recreated when needed
#
set -e
set -x

# Files to be tracked
files[0]=~/bin/dotfiles
files[1]=~/bin/podw
files[2]=~/bin/pod
files[3]=~/bin/konsolewrapper
files[5]=~/bin/matrix.sh
files[6]=~/bin/gibson
files[7]=~/.bashrc
files[8]=~/.bash_profile
files[9]=~/.zshrc
files[10]=~/.zprofile
files[11]=~/.profile
files[12]=~/.vimrc
files[13]=~/.gvimrc
files[14]=~/.LESS_TERMCAP
files[15]=~/.vim/colors/molokai.vim
files[16]=~/.vim/colors/aldmeris.vim
files[17]=~/.vim/colors/darkspectrum.vim
files[18]=/etc/rc.local

# Set the vars here
github_user="BullShark"
github_project="dotfiles"
dir="/var/tmp"
repo="https://github.com/$github_user/$github_project.git"

# Make globbing * and .* behave
GLOBIGNORE=".:.."
shopt -u dotglob

# Retrieve the project folder and change to it
cd "$dir"
git clone "$repo"
dir="$dir/$github_project"
cd "$dir"
mkdir -p "$dir/src"

# Copy the files over to the temp directory for use with git
for each in "${files[@]}"
do
  rsync -av "$each" "$dir/src"
done

# Add, commit, and push
git add * .*
git commit -a -m "Updated" # Made to run as non-interactive by cron
git push

# Do not delete if we have the wrong directory
if [[ $dir =~ ^(/tmp/|/var/tmp/).+ ]]; then
  rm -rf "$dir"
fi

